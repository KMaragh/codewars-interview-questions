Problem:

Complete the solution so that it strips all text that follows any of a set of comment markers passed in. Any whitespace at the end of the line should also be stripped out.

Example:

Given an input string of:

apples, pears # and bananas
grapes
bananas !apples
The output expected would be:

apples, pears
grapes
bananas
The code would be called like so:

var result = solution("apples, pears # and bananas\ngrapes\nbananas !apples", charArrayOf('#', '!'))
// result should == "apples, pears\ngrapes\nbananas"


Solution:

fun solution(input: String, markers: CharArray): String {
   // coding here 
    val sb = StringBuilder()
    var skip = false
    var index = 0
    while(index < input.length){
        val character = input.get(index)
        if(markers.contains(character)){
            skip = true
            index++
            continue
        }
        
        if(skip == false){
            sb.append(character)
        }else if(skip == true && character.equals('\n') ){
            skip = false
            val temp = sb.trimEnd()
            sb.clear()
            sb.append(temp)
            sb.append(character)
        }
        index++
    }
    return sb.toString().trimEnd()

}


Test:
import kotlin.test.assertEquals
import org.junit.Test

class TestExample {
  @Test
  fun testFixed() {
    assertEquals("apples, plums\npears\noranges", solution("apples, plums % and bananas\npears\noranges !applesauce", charArrayOf('%', '!')))
    assertEquals("Q\nu\ne", solution("Q @b\nu\ne -e f g", charArrayOf('@', '-')))
  }
}
